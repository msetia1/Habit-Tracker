{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/habit-tracker/client/src/pages/HabitManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Box, Button, Fab, TextField, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Snackbar, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, CircularProgress, FormControl, InputLabel, Select, Grid, Chip, Tooltip, Link } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Category as CategoryIcon } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { habitAPI, categoryAPI } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst frequencyOptions = [{\n  value: 'daily',\n  label: 'Daily'\n}, {\n  value: 'weekly',\n  label: 'Weekly'\n}, {\n  value: 'monthly',\n  label: 'Monthly'\n}];\nconst initialFormState = {\n  name: '',\n  description: '',\n  frequency: 'daily',\n  targetCount: 1,\n  startDate: new Date(),\n  endDate: null,\n  categoryId: ''\n};\nconst HabitManager = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n  const [editingHabitId, setEditingHabitId] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [alert, setAlert] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [habitToDelete, setHabitToDelete] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchHabits();\n    fetchCategories();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      setLoading(true);\n      const response = await habitAPI.getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n      showAlert('Failed to load habits', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await categoryAPI.getCategories();\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDateChange = (name, date) => {\n    setFormData(prev => ({\n      ...prev,\n      [name]: date\n    }));\n  };\n  const handleSubmit = async () => {\n    try {\n      // Prepare habit data for API\n      const habitData = {\n        ...formData,\n        startDate: formData.startDate.toISOString(),\n        endDate: formData.endDate ? formData.endDate.toISOString() : null,\n        ...(formData.categoryId ? {\n          categoryId: formData.categoryId\n        } : {\n          categoryId: null\n        })\n      };\n      if (editingHabitId) {\n        // Update existing habit\n        await habitAPI.updateHabit(editingHabitId, habitData);\n        showAlert('Habit updated successfully');\n      } else {\n        // Create new habit\n        await habitAPI.createHabit(habitData);\n        showAlert('Habit created successfully');\n      }\n\n      // Reset form and refresh habits\n      setFormData(initialFormState);\n      setEditingHabitId(null);\n      setOpenDialog(false);\n      fetchHabits();\n    } catch (error) {\n      console.error('Error saving habit:', error);\n      showAlert('Failed to save habit', 'error');\n    }\n  };\n  const handleEdit = habit => {\n    // Convert ISO date strings to Date objects\n    const formattedHabit = {\n      ...habit,\n      startDate: new Date(habit.startDate),\n      endDate: habit.endDate ? new Date(habit.endDate) : null\n    };\n    setFormData(formattedHabit);\n    setEditingHabitId(habit.id);\n    setOpenDialog(true);\n  };\n  const confirmDelete = habit => {\n    setHabitToDelete(habit);\n    setDeleteConfirmOpen(true);\n  };\n  const handleDelete = async () => {\n    if (!habitToDelete) return;\n    try {\n      await habitAPI.deleteHabit(habitToDelete.id);\n      showAlert('Habit deleted successfully');\n      fetchHabits();\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n      showAlert('Failed to delete habit', 'error');\n    } finally {\n      setDeleteConfirmOpen(false);\n      setHabitToDelete(null);\n    }\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setFormData(initialFormState);\n    setEditingHabitId(null);\n  };\n  const showAlert = (message, severity = 'success') => {\n    setAlert({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseAlert = () => {\n    setAlert(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n\n  // Navigate to Category Manager\n  const goToCategoryManager = () => {\n    navigate('/categories');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Habit Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(CategoryIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 24\n          }, this),\n          onClick: goToCategoryManager,\n          sx: {\n            mr: 2\n          },\n          children: \"Manage Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            setFormData(initialFormState);\n            setEditingHabitId(null);\n            setOpenDialog(true);\n          },\n          children: \"Add Habit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this) : habits.length === 0 ? /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"textSecondary\",\n        children: \"No habits found. Create your first habit to get started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        sx: {\n          mt: 2\n        },\n        onClick: () => {\n          setFormData(initialFormState);\n          setOpenDialog(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: habits.map(habit => {\n            var _frequencyOptions$fin;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: habit.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: habit.description || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: (_frequencyOptions$fin = frequencyOptions.find(opt => opt.value === habit.frequency)) === null || _frequencyOptions$fin === void 0 ? void 0 : _frequencyOptions$fin.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: habit.category ? /*#__PURE__*/_jsxDEV(Chip, {\n                  label: habit.category.name,\n                  size: \"small\",\n                  style: {\n                    backgroundColor: habit.category.color || '#e0e0e0',\n                    color: habit.category.color ? '#fff' : '#000'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this) : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: format(new Date(habit.startDate), 'MMM d, yyyy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  onClick: () => handleEdit(habit),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"error\",\n                  onClick: () => confirmDelete(habit),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, habit.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingHabitId ? 'Edit Habit' : 'Add New Habit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"name\",\n              label: \"Habit Name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"description\",\n              label: \"Description\",\n              value: formData.description || '',\n              onChange: handleInputChange,\n              fullWidth: true,\n              multiline: true,\n              rows: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"frequency\",\n                value: formData.frequency,\n                onChange: handleInputChange,\n                label: \"Frequency\",\n                children: frequencyOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"targetCount\",\n              label: \"Target Count\",\n              type: \"number\",\n              value: formData.targetCount,\n              onChange: handleInputChange,\n              fullWidth: true,\n              inputProps: {\n                min: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Start Date\",\n              value: formData.startDate,\n              onChange: date => handleDateChange('startDate', date),\n              slotProps: {\n                textField: {\n                  fullWidth: true\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"End Date (Optional)\",\n              value: formData.endDate,\n              onChange: date => handleDateChange('endDate', date),\n              slotProps: {\n                textField: {\n                  fullWidth: true\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"categoryId\",\n                value: formData.categoryId || '',\n                onChange: handleInputChange,\n                label: \"Category\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this), categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category.id,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        width: 16,\n                        height: 16,\n                        borderRadius: '50%',\n                        bgcolor: category.color || '#9e9e9e',\n                        mr: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 25\n                    }, this), category.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 23\n                  }, this)\n                }, category.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), categories.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1,\n                display: 'block'\n              },\n              children: [\"No categories available. \", /*#__PURE__*/_jsxDEV(Link, {\n                component: \"button\",\n                onClick: goToCategoryManager,\n                children: \"Create some categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 44\n              }, this), \" first.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          children: editingHabitId ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteConfirmOpen,\n      onClose: () => setDeleteConfirmOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Are you sure you want to delete the habit \\\"\", habitToDelete === null || habitToDelete === void 0 ? void 0 : habitToDelete.name, \"\\\"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDeleteConfirmOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDelete,\n          color: \"error\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alert.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseAlert,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseAlert,\n        severity: alert.severity,\n        sx: {\n          width: '100%'\n        },\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitManager, \"Q2v3W6zmftSlTyAfK3TENhtngEs=\", false, function () {\n  return [useNavigate];\n});\n_c = HabitManager;\nexport default HabitManager;\nvar _c;\n$RefreshReg$(_c, \"HabitManager\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","Button","Fab","TextField","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Snackbar","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","CircularProgress","FormControl","InputLabel","Select","Grid","Chip","Tooltip","Link","DatePicker","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Category","CategoryIcon","format","habitAPI","categoryAPI","useNavigate","jsxDEV","_jsxDEV","frequencyOptions","value","label","initialFormState","name","description","frequency","targetCount","startDate","Date","endDate","categoryId","HabitManager","_s","habits","setHabits","categories","setCategories","formData","setFormData","editingHabitId","setEditingHabitId","openDialog","setOpenDialog","loading","setLoading","alert","setAlert","open","message","severity","deleteConfirmOpen","setDeleteConfirmOpen","habitToDelete","setHabitToDelete","navigate","fetchHabits","fetchCategories","response","getHabits","data","error","console","showAlert","getCategories","handleInputChange","e","target","prev","handleDateChange","date","handleSubmit","habitData","toISOString","updateHabit","createHabit","handleEdit","habit","formattedHabit","id","confirmDelete","handleDelete","deleteHabit","handleCloseDialog","handleCloseAlert","goToCategoryManager","children","display","justifyContent","alignItems","mb","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","sx","mr","mt","length","p","textAlign","color","map","_frequencyOptions$fin","find","opt","category","size","style","backgroundColor","onClose","maxWidth","fullWidth","container","spacing","item","xs","onChange","required","multiline","rows","sm","option","type","inputProps","min","slotProps","textField","width","height","borderRadius","bgcolor","autoHideDuration","_c","$RefreshReg$"],"sources":["/Users/mike/Projects/habit-tracker/client/src/pages/HabitManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Typography,\n  Box,\n  Button,\n  Fab,\n  TextField,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Snackbar,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  Grid,\n  Chip,\n  Tooltip,\n  Link\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Category as CategoryIcon } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { habitAPI, categoryAPI } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\nconst frequencyOptions = [\n  { value: 'daily', label: 'Daily' },\n  { value: 'weekly', label: 'Weekly' },\n  { value: 'monthly', label: 'Monthly' },\n];\n\nconst initialFormState = {\n  name: '',\n  description: '',\n  frequency: 'daily',\n  targetCount: 1,\n  startDate: new Date(),\n  endDate: null,\n  categoryId: '',\n};\n\nconst HabitManager = () => {\n  const [habits, setHabits] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n  const [editingHabitId, setEditingHabitId] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [habitToDelete, setHabitToDelete] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchHabits();\n    fetchCategories();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      setLoading(true);\n      const response = await habitAPI.getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n      showAlert('Failed to load habits', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await categoryAPI.getCategories();\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleDateChange = (name, date) => {\n    setFormData((prev) => ({ ...prev, [name]: date }));\n  };\n\n  const handleSubmit = async () => {\n    try {\n      // Prepare habit data for API\n      const habitData = {\n        ...formData,\n        startDate: formData.startDate.toISOString(),\n        endDate: formData.endDate ? formData.endDate.toISOString() : null,\n        ...(formData.categoryId ? { categoryId: formData.categoryId } : { categoryId: null })\n      };\n\n      if (editingHabitId) {\n        // Update existing habit\n        await habitAPI.updateHabit(editingHabitId, habitData);\n        showAlert('Habit updated successfully');\n      } else {\n        // Create new habit\n        await habitAPI.createHabit(habitData);\n        showAlert('Habit created successfully');\n      }\n\n      // Reset form and refresh habits\n      setFormData(initialFormState);\n      setEditingHabitId(null);\n      setOpenDialog(false);\n      fetchHabits();\n    } catch (error) {\n      console.error('Error saving habit:', error);\n      showAlert('Failed to save habit', 'error');\n    }\n  };\n\n  const handleEdit = (habit) => {\n    // Convert ISO date strings to Date objects\n    const formattedHabit = {\n      ...habit,\n      startDate: new Date(habit.startDate),\n      endDate: habit.endDate ? new Date(habit.endDate) : null,\n    };\n    \n    setFormData(formattedHabit);\n    setEditingHabitId(habit.id);\n    setOpenDialog(true);\n  };\n\n  const confirmDelete = (habit) => {\n    setHabitToDelete(habit);\n    setDeleteConfirmOpen(true);\n  };\n\n  const handleDelete = async () => {\n    if (!habitToDelete) return;\n    \n    try {\n      await habitAPI.deleteHabit(habitToDelete.id);\n      showAlert('Habit deleted successfully');\n      fetchHabits();\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n      showAlert('Failed to delete habit', 'error');\n    } finally {\n      setDeleteConfirmOpen(false);\n      setHabitToDelete(null);\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setFormData(initialFormState);\n    setEditingHabitId(null);\n  };\n\n  const showAlert = (message, severity = 'success') => {\n    setAlert({ open: true, message, severity });\n  };\n\n  const handleCloseAlert = () => {\n    setAlert((prev) => ({ ...prev, open: false }));\n  };\n\n  // Navigate to Category Manager\n  const goToCategoryManager = () => {\n    navigate('/categories');\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={4}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Habit Manager\n        </Typography>\n        <Box>\n          <Button\n            variant=\"outlined\"\n            startIcon={<CategoryIcon />}\n            onClick={goToCategoryManager}\n            sx={{ mr: 2 }}\n          >\n            Manage Categories\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={() => {\n              setFormData(initialFormState);\n              setEditingHabitId(null);\n              setOpenDialog(true);\n            }}\n          >\n            Add Habit\n          </Button>\n        </Box>\n      </Box>\n\n      {loading ? (\n        <Box display=\"flex\" justifyContent=\"center\" mt={4}>\n          <CircularProgress />\n        </Box>\n      ) : habits.length === 0 ? (\n        <Paper sx={{ p: 4, textAlign: 'center' }}>\n          <Typography variant=\"h6\" color=\"textSecondary\">\n            No habits found. Create your first habit to get started!\n          </Typography>\n          <Fab\n            color=\"primary\"\n            sx={{ mt: 2 }}\n            onClick={() => {\n              setFormData(initialFormState);\n              setOpenDialog(true);\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </Paper>\n      ) : (\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell>Frequency</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Start Date</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {habits.map((habit) => (\n                <TableRow key={habit.id}>\n                  <TableCell>{habit.name}</TableCell>\n                  <TableCell>{habit.description || '-'}</TableCell>\n                  <TableCell>\n                    {frequencyOptions.find((opt) => opt.value === habit.frequency)?.label}\n                  </TableCell>\n                  <TableCell>\n                    {habit.category ? (\n                      <Chip\n                        label={habit.category.name}\n                        size=\"small\"\n                        style={{\n                          backgroundColor: habit.category.color || '#e0e0e0',\n                          color: habit.category.color ? '#fff' : '#000',\n                        }}\n                      />\n                    ) : (\n                      '-'\n                    )}\n                  </TableCell>\n                  <TableCell>{format(new Date(habit.startDate), 'MMM d, yyyy')}</TableCell>\n                  <TableCell>\n                    <IconButton color=\"primary\" onClick={() => handleEdit(habit)}>\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton color=\"error\" onClick={() => confirmDelete(habit)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n\n      {/* Add/Edit Habit Dialog */}\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>{editingHabitId ? 'Edit Habit' : 'Add New Habit'}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"name\"\n                label=\"Habit Name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name=\"description\"\n                label=\"Description\"\n                value={formData.description || ''}\n                onChange={handleInputChange}\n                fullWidth\n                multiline\n                rows={2}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Frequency</InputLabel>\n                <Select\n                  name=\"frequency\"\n                  value={formData.frequency}\n                  onChange={handleInputChange}\n                  label=\"Frequency\"\n                >\n                  {frequencyOptions.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                name=\"targetCount\"\n                label=\"Target Count\"\n                type=\"number\"\n                value={formData.targetCount}\n                onChange={handleInputChange}\n                fullWidth\n                inputProps={{ min: 1 }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <DatePicker\n                label=\"Start Date\"\n                value={formData.startDate}\n                onChange={(date) => handleDateChange('startDate', date)}\n                slotProps={{ textField: { fullWidth: true } }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <DatePicker\n                label=\"End Date (Optional)\"\n                value={formData.endDate}\n                onChange={(date) => handleDateChange('endDate', date)}\n                slotProps={{ textField: { fullWidth: true } }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel>Category</InputLabel>\n                <Select\n                  name=\"categoryId\"\n                  value={formData.categoryId || ''}\n                  onChange={handleInputChange}\n                  label=\"Category\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {categories.map((category) => (\n                    <MenuItem key={category.id} value={category.id}>\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        <Box\n                          sx={{\n                            width: 16,\n                            height: 16,\n                            borderRadius: '50%',\n                            bgcolor: category.color || '#9e9e9e',\n                            mr: 1\n                          }}\n                        />\n                        {category.name}\n                      </Box>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              {categories.length === 0 && (\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\n                  No categories available. <Link component=\"button\" onClick={goToCategoryManager}>Create some categories</Link> first.\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button onClick={handleSubmit} variant=\"contained\">\n            {editingHabitId ? 'Update' : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog open={deleteConfirmOpen} onClose={() => setDeleteConfirmOpen(false)}>\n        <DialogTitle>Confirm Deletion</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Are you sure you want to delete the habit \"{habitToDelete?.name}\"? This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteConfirmOpen(false)}>Cancel</Button>\n          <Button onClick={handleDelete} color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Alert Snackbar */}\n      <Snackbar open={alert.open} autoHideDuration={6000} onClose={handleCloseAlert}>\n        <Alert onClose={handleCloseAlert} severity={alert.severity} sx={{ width: '100%' }}>\n          {alert.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default HabitManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/habit-tracker/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Box, Grid, Paper, Card, CardContent, CardActions, Button, Chip, CircularProgress, Alert, Divider, List, ListItem, ListItemText, ListItemIcon, IconButton, Tooltip, Snackbar } from '@mui/material';\nimport { CheckCircle as CheckCircleIcon, Assignment as AssignmentIcon, Add as AddIcon, BarChart as BarChartIcon, CalendarToday as CalendarTodayIcon, Done as DoneIcon } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { habitAPI, statsAPI } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport LogHabitDialog from '../components/LogHabitDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [habits, setHabits] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [alert, setAlert] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  // Log habit dialog state\n  const [logCompletionOpen, setLogCompletionOpen] = useState(false);\n  const [selectedHabit, setSelectedHabit] = useState(null);\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Get current date for filtering\n        const today = new Date();\n        const startDate = new Date(today);\n        startDate.setDate(today.getDate() - 30); // Last 30 days\n\n        // Fetch habits and stats\n        const [habitsResponse, statsResponse] = await Promise.all([habitAPI.getHabits(), statsAPI.getStats(startDate.toISOString().split('T')[0], today.toISOString().split('T')[0])]);\n        setHabits(habitsResponse.data);\n        setStats(statsResponse.data);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setError('Failed to load dashboard data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n\n  // Handle opening the log completion dialog\n  const handleOpenLogCompletion = habit => {\n    setSelectedHabit(habit);\n    setLogCompletionOpen(true);\n  };\n\n  // Handle closing the log completion dialog\n  const handleCloseLogCompletion = () => {\n    setLogCompletionOpen(false);\n    setSelectedHabit(null);\n  };\n\n  // Handle successful completion logging\n  const handleLogCompletionSuccess = () => {\n    setAlert({\n      open: true,\n      message: 'Habit completion logged successfully!',\n      severity: 'success'\n    });\n    fetchDashboardData(); // Refresh data\n  };\n  const handleCloseAlert = () => {\n    setAlert(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  const getActiveHabits = () => {\n    return habits.filter(habit => habit.active).slice(0, 5);\n  };\n  const getRecentlyCompletedHabits = () => {\n    return habits.filter(habit => habit.habitLogs && habit.habitLogs.length > 0 && habit.active).sort((a, b) => {\n      const aDate = a.habitLogs.length ? new Date(a.habitLogs[a.habitLogs.length - 1].date) : new Date(0);\n      const bDate = b.habitLogs.length ? new Date(b.habitLogs[b.habitLogs.length - 1].date) : new Date(0);\n      return bDate - aDate;\n    }).slice(0, 3);\n  };\n  const getTopStreaks = () => {\n    return habits.filter(habit => habit.streaks && habit.streaks.length > 0).sort((a, b) => {\n      var _a$streaks$, _b$streaks$;\n      const aStreak = ((_a$streaks$ = a.streaks[0]) === null || _a$streaks$ === void 0 ? void 0 : _a$streaks$.currentStreak) || 0;\n      const bStreak = ((_b$streaks$ = b.streaks[0]) === null || _b$streaks$ === void 0 ? void 0 : _b$streaks$.currentStreak) || 0;\n      return bStreak - aStreak;\n    }).slice(0, 3);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: [\"Welcome, \", (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || 'User', \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        children: format(new Date(), 'EEEE, MMMM d, yyyy')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Total Habits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: habits.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Active Habits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: habits.filter(habit => habit.active).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: new Set(habits.map(habit => habit.categoryId).filter(Boolean)).size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Best Streak\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: Math.max(...habits.filter(habit => habit.streaks && habit.streaks.length > 0).map(habit => {\n                var _habit$streaks$;\n                return ((_habit$streaks$ = habit.streaks[0]) === null || _habit$streaks$ === void 0 ? void 0 : _habit$streaks$.longestStreak) || 0;\n              }), 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Active Habits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: \"/habits\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 64\n              }, this),\n              size: \"small\",\n              children: \"Manage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), getActiveHabits().length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            children: \"No active habits found. Start by creating a new habit!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            children: getActiveHabits().map(habit => /*#__PURE__*/_jsxDEV(ListItem, {\n              divider: true,\n              secondaryAction: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Log Completion\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  color: \"success\",\n                  onClick: () => handleOpenLogCompletion(habit),\n                  children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(CalendarTodayIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: habit.name,\n                secondary: `${habit.frequency} • ${habit.category ? habit.category.name : 'No category'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), habit.streaks && habit.streaks.length > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                size: \"small\",\n                label: `Streak: ${habit.streaks[0].currentStreak}`,\n                color: \"primary\",\n                variant: \"outlined\",\n                sx: {\n                  mr: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this)]\n            }, habit.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), habits.filter(habit => habit.active).length > 5 && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: \"/habits\",\n              size: \"small\",\n              children: [\"View All (\", habits.filter(habit => habit.active).length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Recent Completions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  component: Link,\n                  to: \"/reports\",\n                  size: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(BarChartIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), getRecentlyCompletedHabits().length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"info\",\n                children: \"No recent habit completions. Start logging your progress!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(List, {\n                children: getRecentlyCompletedHabits().map(habit => {\n                  const latestLog = habit.habitLogs[habit.habitLogs.length - 1];\n                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                    divider: true,\n                    secondaryAction: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Log Again\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        edge: \"end\",\n                        color: \"success\",\n                        onClick: () => handleOpenLogCompletion(habit),\n                        children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 316,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 29\n                    }, this),\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                        color: \"success\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: habit.name,\n                      secondary: `Completed on ${format(new Date(latestLog.date), 'MMM d, yyyy')}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 27\n                    }, this)]\n                  }, habit.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Top Streaks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), getTopStreaks().length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"info\",\n                children: \"No streaks yet. Keep completing your habits consistently!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(List, {\n                children: getTopStreaks().map(habit => /*#__PURE__*/_jsxDEV(ListItem, {\n                  divider: true,\n                  secondaryAction: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Log Completion\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      edge: \"end\",\n                      color: \"success\",\n                      onClick: () => handleOpenLogCompletion(habit),\n                      children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 27\n                  }, this),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: habit.name,\n                    secondary: `${habit.frequency} • ${habit.category ? habit.category.name : 'No category'}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: `Streak: ${habit.streaks[0].currentStreak}`,\n                    color: \"primary\",\n                    sx: {\n                      mr: 4\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 25\n                  }, this)]\n                }, habit.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogHabitDialog, {\n      open: logCompletionOpen,\n      onClose: handleCloseLogCompletion,\n      habit: selectedHabit,\n      onSuccess: handleLogCompletionSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alert.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseAlert,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseAlert,\n        severity: alert.severity,\n        sx: {\n          width: '100%'\n        },\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"eygh8UgtReS3D3TY9NNd++I/mZ8=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Typography","Box","Grid","Paper","Card","CardContent","CardActions","Button","Chip","CircularProgress","Alert","Divider","List","ListItem","ListItemText","ListItemIcon","IconButton","Tooltip","Snackbar","CheckCircle","CheckCircleIcon","Assignment","AssignmentIcon","Add","AddIcon","BarChart","BarChartIcon","CalendarToday","CalendarTodayIcon","Done","DoneIcon","format","habitAPI","statsAPI","useAuth","LogHabitDialog","jsxDEV","_jsxDEV","Dashboard","_s","currentUser","habits","setHabits","stats","setStats","loading","setLoading","error","setError","alert","setAlert","open","message","severity","logCompletionOpen","setLogCompletionOpen","selectedHabit","setSelectedHabit","fetchDashboardData","today","Date","startDate","setDate","getDate","habitsResponse","statsResponse","Promise","all","getHabits","getStats","toISOString","split","data","console","handleOpenLogCompletion","habit","handleCloseLogCompletion","handleLogCompletionSuccess","handleCloseAlert","prev","getActiveHabits","filter","active","slice","getRecentlyCompletedHabits","habitLogs","length","sort","a","b","aDate","date","bDate","getTopStreaks","streaks","_a$streaks$","_b$streaks$","aStreak","currentStreak","bStreak","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","mb","variant","component","gutterBottom","username","color","container","spacing","item","xs","sm","md","Set","map","categoryId","Boolean","size","Math","max","_habit$streaks$","longestStreak","p","height","to","startIcon","divider","secondaryAction","title","edge","onClick","primary","name","secondary","frequency","category","label","mr","id","textAlign","latestLog","onClose","onSuccess","autoHideDuration","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["/Users/mike/Projects/habit-tracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Typography,\n  Box,\n  Grid,\n  Paper,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Chip,\n  CircularProgress,\n  Alert,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  IconButton,\n  Tooltip,\n  Snackbar,\n} from '@mui/material';\nimport {\n  CheckCircle as CheckCircleIcon,\n  Assignment as AssignmentIcon,\n  Add as AddIcon,\n  BarChart as BarChartIcon,\n  CalendarToday as CalendarTodayIcon,\n  Done as DoneIcon,\n} from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { habitAPI, statsAPI } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport LogHabitDialog from '../components/LogHabitDialog';\n\nconst Dashboard = () => {\n  const { currentUser } = useAuth();\n  const [habits, setHabits] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n  \n  // Log habit dialog state\n  const [logCompletionOpen, setLogCompletionOpen] = useState(false);\n  const [selectedHabit, setSelectedHabit] = useState(null);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Get current date for filtering\n        const today = new Date();\n        const startDate = new Date(today);\n        startDate.setDate(today.getDate() - 30); // Last 30 days\n        \n        // Fetch habits and stats\n        const [habitsResponse, statsResponse] = await Promise.all([\n          habitAPI.getHabits(),\n          statsAPI.getStats(\n            startDate.toISOString().split('T')[0],\n            today.toISOString().split('T')[0]\n          ),\n        ]);\n        \n        setHabits(habitsResponse.data);\n        setStats(statsResponse.data);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setError('Failed to load dashboard data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  // Handle opening the log completion dialog\n  const handleOpenLogCompletion = (habit) => {\n    setSelectedHabit(habit);\n    setLogCompletionOpen(true);\n  };\n  \n  // Handle closing the log completion dialog\n  const handleCloseLogCompletion = () => {\n    setLogCompletionOpen(false);\n    setSelectedHabit(null);\n  };\n  \n  // Handle successful completion logging\n  const handleLogCompletionSuccess = () => {\n    setAlert({\n      open: true,\n      message: 'Habit completion logged successfully!',\n      severity: 'success'\n    });\n    fetchDashboardData(); // Refresh data\n  };\n  \n  const handleCloseAlert = () => {\n    setAlert((prev) => ({ ...prev, open: false }));\n  };\n\n  const getActiveHabits = () => {\n    return habits.filter(habit => habit.active).slice(0, 5);\n  };\n\n  const getRecentlyCompletedHabits = () => {\n    return habits\n      .filter(habit => \n        habit.habitLogs && \n        habit.habitLogs.length > 0 &&\n        habit.active\n      )\n      .sort((a, b) => {\n        const aDate = a.habitLogs.length ? new Date(a.habitLogs[a.habitLogs.length - 1].date) : new Date(0);\n        const bDate = b.habitLogs.length ? new Date(b.habitLogs[b.habitLogs.length - 1].date) : new Date(0);\n        return bDate - aDate;\n      })\n      .slice(0, 3);\n  };\n\n  const getTopStreaks = () => {\n    return habits\n      .filter(habit => habit.streaks && habit.streaks.length > 0)\n      .sort((a, b) => {\n        const aStreak = a.streaks[0]?.currentStreak || 0;\n        const bStreak = b.streaks[0]?.currentStreak || 0;\n        return bStreak - aStreak;\n      })\n      .slice(0, 3);\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mt: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      {/* Welcome Section */}\n      <Box mb={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Welcome, {currentUser?.username || 'User'}!\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          {format(new Date(), 'EEEE, MMMM d, yyyy')}\n        </Typography>\n      </Box>\n\n      {/* Stats Overview */}\n      <Grid container spacing={3} mb={4}>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Total Habits\n              </Typography>\n              <Typography variant=\"h4\">{habits.length}</Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Active Habits\n              </Typography>\n              <Typography variant=\"h4\">\n                {habits.filter(habit => habit.active).length}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Categories\n              </Typography>\n              <Typography variant=\"h4\">\n                {new Set(habits.map(habit => habit.categoryId).filter(Boolean)).size}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Best Streak\n              </Typography>\n              <Typography variant=\"h4\">\n                {Math.max(\n                  ...habits\n                    .filter(habit => habit.streaks && habit.streaks.length > 0)\n                    .map(habit => habit.streaks[0]?.longestStreak || 0),\n                  0\n                )}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Main Dashboard Content */}\n      <Grid container spacing={3}>\n        {/* Active Habits */}\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 3, height: '100%' }}>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n              <Typography variant=\"h6\">Active Habits</Typography>\n              <Button component={Link} to=\"/habits\" startIcon={<AddIcon />} size=\"small\">\n                Manage\n              </Button>\n            </Box>\n            <Divider sx={{ mb: 2 }} />\n            {getActiveHabits().length === 0 ? (\n              <Alert severity=\"info\">\n                No active habits found. Start by creating a new habit!\n              </Alert>\n            ) : (\n              <List>\n                {getActiveHabits().map((habit) => (\n                  <ListItem key={habit.id} \n                    divider\n                    secondaryAction={\n                      <Tooltip title=\"Log Completion\">\n                        <IconButton \n                          edge=\"end\" \n                          color=\"success\" \n                          onClick={() => handleOpenLogCompletion(habit)}\n                        >\n                          <DoneIcon />\n                        </IconButton>\n                      </Tooltip>\n                    }\n                  >\n                    <ListItemIcon>\n                      <CalendarTodayIcon color=\"primary\" />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={habit.name}\n                      secondary={`${habit.frequency} • ${\n                        habit.category ? habit.category.name : 'No category'\n                      }`}\n                    />\n                    {habit.streaks && habit.streaks.length > 0 && (\n                      <Chip\n                        size=\"small\"\n                        label={`Streak: ${habit.streaks[0].currentStreak}`}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        sx={{ mr: 4 }}\n                      />\n                    )}\n                  </ListItem>\n                ))}\n              </List>\n            )}\n            {habits.filter(habit => habit.active).length > 5 && (\n              <Box mt={2} textAlign=\"center\">\n                <Button component={Link} to=\"/habits\" size=\"small\">\n                  View All ({habits.filter(habit => habit.active).length})\n                </Button>\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Recent Completions & Top Streaks */}\n        <Grid item xs={12} md={6}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper sx={{ p: 3 }}>\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n                  <Typography variant=\"h6\">Recent Completions</Typography>\n                  <IconButton component={Link} to=\"/reports\" size=\"small\">\n                    <BarChartIcon />\n                  </IconButton>\n                </Box>\n                <Divider sx={{ mb: 2 }} />\n                {getRecentlyCompletedHabits().length === 0 ? (\n                  <Alert severity=\"info\">\n                    No recent habit completions. Start logging your progress!\n                  </Alert>\n                ) : (\n                  <List>\n                    {getRecentlyCompletedHabits().map((habit) => {\n                      const latestLog = habit.habitLogs[habit.habitLogs.length - 1];\n                      return (\n                        <ListItem key={habit.id} \n                          divider\n                          secondaryAction={\n                            <Tooltip title=\"Log Again\">\n                              <IconButton \n                                edge=\"end\" \n                                color=\"success\" \n                                onClick={() => handleOpenLogCompletion(habit)}\n                              >\n                                <DoneIcon />\n                              </IconButton>\n                            </Tooltip>\n                          }\n                        >\n                          <ListItemIcon>\n                            <CheckCircleIcon color=\"success\" />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={habit.name}\n                            secondary={`Completed on ${format(\n                              new Date(latestLog.date),\n                              'MMM d, yyyy'\n                            )}`}\n                          />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                )}\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper sx={{ p: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Top Streaks\n                </Typography>\n                <Divider sx={{ mb: 2 }} />\n                {getTopStreaks().length === 0 ? (\n                  <Alert severity=\"info\">\n                    No streaks yet. Keep completing your habits consistently!\n                  </Alert>\n                ) : (\n                  <List>\n                    {getTopStreaks().map((habit) => (\n                      <ListItem key={habit.id} \n                        divider\n                        secondaryAction={\n                          <Tooltip title=\"Log Completion\">\n                            <IconButton \n                              edge=\"end\" \n                              color=\"success\" \n                              onClick={() => handleOpenLogCompletion(habit)}\n                            >\n                              <DoneIcon />\n                            </IconButton>\n                          </Tooltip>\n                        }\n                      >\n                        <ListItemIcon>\n                          <AssignmentIcon color=\"primary\" />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={habit.name}\n                          secondary={`${habit.frequency} • ${\n                            habit.category ? habit.category.name : 'No category'\n                          }`}\n                        />\n                        <Chip\n                          size=\"small\"\n                          label={`Streak: ${habit.streaks[0].currentStreak}`}\n                          color=\"primary\"\n                          sx={{ mr: 4 }}\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                )}\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      \n      {/* Log Completion Dialog */}\n      <LogHabitDialog\n        open={logCompletionOpen}\n        onClose={handleCloseLogCompletion}\n        habit={selectedHabit}\n        onSuccess={handleLogCompletionSuccess}\n      />\n      \n      {/* Alert Snackbar */}\n      <Snackbar\n        open={alert.open}\n        autoHideDuration={6000}\n        onClose={handleCloseAlert}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={handleCloseAlert}\n          severity={alert.severity} \n          sx={{ width: '100%' }}\n        >\n          {alert.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
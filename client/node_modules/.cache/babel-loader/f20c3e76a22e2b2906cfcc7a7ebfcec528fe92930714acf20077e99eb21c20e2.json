{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/habit-tracker/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchCurrentUser = async () => {\n    try {\n      const response = await authAPI.getCurrentUser();\n      setCurrentUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      setCurrentUser(response.data.user);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await authAPI.register(userData);\n      localStorage.setItem('token', response.data.token);\n      setCurrentUser(response.data.user);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"hNgQD0P+I/CyPsdPRzJTYoOt5q0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","token","localStorage","getItem","fetchCurrentUser","response","getCurrentUser","data","console","removeItem","login","email","password","setItem","user","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Projects/habit-tracker/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchCurrentUser = async () => {\n    try {\n      const response = await authAPI.getCurrentUser();\n      setCurrentUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await authAPI.login({ email, password });\n      localStorage.setItem('token', response.data.token);\n      setCurrentUser(response.data.user);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (error) {\n      setError(error.response?.data?.error || 'Login failed');\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      setError(null);\n      const response = await authAPI.register(userData);\n      localStorage.setItem('token', response.data.token);\n      setCurrentUser(response.data.user);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (error) {\n      setError(error.response?.data?.error || 'Registration failed');\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
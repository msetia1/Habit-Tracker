{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/habit-tracker/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Box, Grid, Paper, Card, CardContent, CardActions, Button, Chip, CircularProgress, Alert, Divider, List, ListItem, ListItemText, ListItemIcon, IconButton } from '@mui/material';\nimport { CheckCircle as CheckCircleIcon, Assignment as AssignmentIcon, Add as AddIcon, BarChart as BarChartIcon, CalendarToday as CalendarTodayIcon } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { habitAPI, statsAPI } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [habits, setHabits] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Get current date for filtering\n        const today = new Date();\n        const startDate = new Date(today);\n        startDate.setDate(today.getDate() - 30); // Last 30 days\n\n        // Fetch habits and stats\n        const [habitsResponse, statsResponse] = await Promise.all([habitAPI.getHabits(), statsAPI.getStats(startDate.toISOString().split('T')[0], today.toISOString().split('T')[0])]);\n        setHabits(habitsResponse.data);\n        setStats(statsResponse.data);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setError('Failed to load dashboard data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n  const getActiveHabits = () => {\n    return habits.filter(habit => habit.active).slice(0, 5);\n  };\n  const getRecentlyCompletedHabits = () => {\n    return habits.filter(habit => habit.habitLogs && habit.habitLogs.length > 0 && habit.active).sort((a, b) => {\n      const aDate = a.habitLogs.length ? new Date(a.habitLogs[a.habitLogs.length - 1].date) : new Date(0);\n      const bDate = b.habitLogs.length ? new Date(b.habitLogs[b.habitLogs.length - 1].date) : new Date(0);\n      return bDate - aDate;\n    }).slice(0, 3);\n  };\n  const getTopStreaks = () => {\n    return habits.filter(habit => habit.streaks && habit.streaks.length > 0).sort((a, b) => {\n      var _a$streaks$, _b$streaks$;\n      const aStreak = ((_a$streaks$ = a.streaks[0]) === null || _a$streaks$ === void 0 ? void 0 : _a$streaks$.currentStreak) || 0;\n      const bStreak = ((_b$streaks$ = b.streaks[0]) === null || _b$streaks$ === void 0 ? void 0 : _b$streaks$.currentStreak) || 0;\n      return bStreak - aStreak;\n    }).slice(0, 3);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: [\"Welcome, \", (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || 'User', \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        children: format(new Date(), 'EEEE, MMMM d, yyyy')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Total Habits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: habits.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Active Habits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: habits.filter(habit => habit.active).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: new Set(habits.map(habit => habit.categoryId).filter(Boolean)).size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Best Streak\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: Math.max(...habits.filter(habit => habit.streaks && habit.streaks.length > 0).map(habit => {\n                var _habit$streaks$;\n                return ((_habit$streaks$ = habit.streaks[0]) === null || _habit$streaks$ === void 0 ? void 0 : _habit$streaks$.longestStreak) || 0;\n              }), 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Active Habits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: \"/habits\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 64\n              }, this),\n              size: \"small\",\n              children: \"Manage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), getActiveHabits().length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            children: \"No active habits found. Start by creating a new habit!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            children: getActiveHabits().map(habit => /*#__PURE__*/_jsxDEV(ListItem, {\n              divider: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(CalendarTodayIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: habit.name,\n                secondary: `${habit.frequency} • ${habit.category ? habit.category.name : 'No category'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), habit.streaks && habit.streaks.length > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                size: \"small\",\n                label: `Streak: ${habit.streaks[0].currentStreak}`,\n                color: \"primary\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 23\n              }, this)]\n            }, habit.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), habits.filter(habit => habit.active).length > 5 && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: \"/habits\",\n              size: \"small\",\n              children: [\"View All (\", habits.filter(habit => habit.active).length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Recent Completions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  component: Link,\n                  to: \"/reports\",\n                  size: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(BarChartIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), getRecentlyCompletedHabits().length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"info\",\n                children: \"No recent habit completions. Start logging your progress!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(List, {\n                children: getRecentlyCompletedHabits().map(habit => {\n                  const latestLog = habit.habitLogs[habit.habitLogs.length - 1];\n                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                    divider: true,\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                        color: \"success\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: habit.name,\n                      secondary: `Completed on ${format(new Date(latestLog.date), 'MMM d, yyyy')}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 27\n                    }, this)]\n                  }, habit.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Top Streaks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), getTopStreaks().length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"info\",\n                children: \"No streaks yet. Keep completing your habits consistently!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(List, {\n                children: getTopStreaks().map(habit => /*#__PURE__*/_jsxDEV(ListItem, {\n                  divider: true,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: habit.name,\n                    secondary: `${habit.frequency} • ${habit.category ? habit.category.name : 'No category'}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: `Streak: ${habit.streaks[0].currentStreak}`,\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 25\n                  }, this)]\n                }, habit.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qIDYq2ZeqODV6ApoNSew6id+axY=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Typography","Box","Grid","Paper","Card","CardContent","CardActions","Button","Chip","CircularProgress","Alert","Divider","List","ListItem","ListItemText","ListItemIcon","IconButton","CheckCircle","CheckCircleIcon","Assignment","AssignmentIcon","Add","AddIcon","BarChart","BarChartIcon","CalendarToday","CalendarTodayIcon","format","habitAPI","statsAPI","useAuth","jsxDEV","_jsxDEV","Dashboard","_s","currentUser","habits","setHabits","stats","setStats","loading","setLoading","error","setError","fetchDashboardData","today","Date","startDate","setDate","getDate","habitsResponse","statsResponse","Promise","all","getHabits","getStats","toISOString","split","data","console","getActiveHabits","filter","habit","active","slice","getRecentlyCompletedHabits","habitLogs","length","sort","a","b","aDate","date","bDate","getTopStreaks","streaks","_a$streaks$","_b$streaks$","aStreak","currentStreak","bStreak","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","sx","mt","mb","variant","component","gutterBottom","username","color","container","spacing","item","xs","sm","md","Set","map","categoryId","Boolean","size","Math","max","_habit$streaks$","longestStreak","p","height","to","startIcon","divider","primary","name","secondary","frequency","category","label","id","textAlign","latestLog","_c","$RefreshReg$"],"sources":["/Users/mike/Projects/habit-tracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Typography,\n  Box,\n  Grid,\n  Paper,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Chip,\n  CircularProgress,\n  Alert,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  IconButton,\n} from '@mui/material';\nimport {\n  CheckCircle as CheckCircleIcon,\n  Assignment as AssignmentIcon,\n  Add as AddIcon,\n  BarChart as BarChartIcon,\n  CalendarToday as CalendarTodayIcon,\n} from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { habitAPI, statsAPI } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\n\nconst Dashboard = () => {\n  const { currentUser } = useAuth();\n  const [habits, setHabits] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Get current date for filtering\n        const today = new Date();\n        const startDate = new Date(today);\n        startDate.setDate(today.getDate() - 30); // Last 30 days\n        \n        // Fetch habits and stats\n        const [habitsResponse, statsResponse] = await Promise.all([\n          habitAPI.getHabits(),\n          statsAPI.getStats(\n            startDate.toISOString().split('T')[0],\n            today.toISOString().split('T')[0]\n          ),\n        ]);\n        \n        setHabits(habitsResponse.data);\n        setStats(statsResponse.data);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setError('Failed to load dashboard data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  const getActiveHabits = () => {\n    return habits.filter(habit => habit.active).slice(0, 5);\n  };\n\n  const getRecentlyCompletedHabits = () => {\n    return habits\n      .filter(habit => \n        habit.habitLogs && \n        habit.habitLogs.length > 0 &&\n        habit.active\n      )\n      .sort((a, b) => {\n        const aDate = a.habitLogs.length ? new Date(a.habitLogs[a.habitLogs.length - 1].date) : new Date(0);\n        const bDate = b.habitLogs.length ? new Date(b.habitLogs[b.habitLogs.length - 1].date) : new Date(0);\n        return bDate - aDate;\n      })\n      .slice(0, 3);\n  };\n\n  const getTopStreaks = () => {\n    return habits\n      .filter(habit => habit.streaks && habit.streaks.length > 0)\n      .sort((a, b) => {\n        const aStreak = a.streaks[0]?.currentStreak || 0;\n        const bStreak = b.streaks[0]?.currentStreak || 0;\n        return bStreak - aStreak;\n      })\n      .slice(0, 3);\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mt: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      {/* Welcome Section */}\n      <Box mb={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Welcome, {currentUser?.username || 'User'}!\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          {format(new Date(), 'EEEE, MMMM d, yyyy')}\n        </Typography>\n      </Box>\n\n      {/* Stats Overview */}\n      <Grid container spacing={3} mb={4}>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Total Habits\n              </Typography>\n              <Typography variant=\"h4\">{habits.length}</Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Active Habits\n              </Typography>\n              <Typography variant=\"h4\">\n                {habits.filter(habit => habit.active).length}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Categories\n              </Typography>\n              <Typography variant=\"h4\">\n                {new Set(habits.map(habit => habit.categoryId).filter(Boolean)).size}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Best Streak\n              </Typography>\n              <Typography variant=\"h4\">\n                {Math.max(\n                  ...habits\n                    .filter(habit => habit.streaks && habit.streaks.length > 0)\n                    .map(habit => habit.streaks[0]?.longestStreak || 0),\n                  0\n                )}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Main Dashboard Content */}\n      <Grid container spacing={3}>\n        {/* Active Habits */}\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 3, height: '100%' }}>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n              <Typography variant=\"h6\">Active Habits</Typography>\n              <Button component={Link} to=\"/habits\" startIcon={<AddIcon />} size=\"small\">\n                Manage\n              </Button>\n            </Box>\n            <Divider sx={{ mb: 2 }} />\n            {getActiveHabits().length === 0 ? (\n              <Alert severity=\"info\">\n                No active habits found. Start by creating a new habit!\n              </Alert>\n            ) : (\n              <List>\n                {getActiveHabits().map((habit) => (\n                  <ListItem key={habit.id} divider>\n                    <ListItemIcon>\n                      <CalendarTodayIcon color=\"primary\" />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={habit.name}\n                      secondary={`${habit.frequency} • ${\n                        habit.category ? habit.category.name : 'No category'\n                      }`}\n                    />\n                    {habit.streaks && habit.streaks.length > 0 && (\n                      <Chip\n                        size=\"small\"\n                        label={`Streak: ${habit.streaks[0].currentStreak}`}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                      />\n                    )}\n                  </ListItem>\n                ))}\n              </List>\n            )}\n            {habits.filter(habit => habit.active).length > 5 && (\n              <Box mt={2} textAlign=\"center\">\n                <Button component={Link} to=\"/habits\" size=\"small\">\n                  View All ({habits.filter(habit => habit.active).length})\n                </Button>\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Recent Completions & Top Streaks */}\n        <Grid item xs={12} md={6}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper sx={{ p: 3 }}>\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n                  <Typography variant=\"h6\">Recent Completions</Typography>\n                  <IconButton component={Link} to=\"/reports\" size=\"small\">\n                    <BarChartIcon />\n                  </IconButton>\n                </Box>\n                <Divider sx={{ mb: 2 }} />\n                {getRecentlyCompletedHabits().length === 0 ? (\n                  <Alert severity=\"info\">\n                    No recent habit completions. Start logging your progress!\n                  </Alert>\n                ) : (\n                  <List>\n                    {getRecentlyCompletedHabits().map((habit) => {\n                      const latestLog = habit.habitLogs[habit.habitLogs.length - 1];\n                      return (\n                        <ListItem key={habit.id} divider>\n                          <ListItemIcon>\n                            <CheckCircleIcon color=\"success\" />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={habit.name}\n                            secondary={`Completed on ${format(\n                              new Date(latestLog.date),\n                              'MMM d, yyyy'\n                            )}`}\n                          />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                )}\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper sx={{ p: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Top Streaks\n                </Typography>\n                <Divider sx={{ mb: 2 }} />\n                {getTopStreaks().length === 0 ? (\n                  <Alert severity=\"info\">\n                    No streaks yet. Keep completing your habits consistently!\n                  </Alert>\n                ) : (\n                  <List>\n                    {getTopStreaks().map((habit) => (\n                      <ListItem key={habit.id} divider>\n                        <ListItemIcon>\n                          <AssignmentIcon color=\"primary\" />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={habit.name}\n                          secondary={`${habit.frequency} • ${\n                            habit.category ? habit.category.name : 'No category'\n                          }`}\n                        />\n                        <Chip\n                          size=\"small\"\n                          label={`Streak: ${habit.streaks[0].currentStreak}`}\n                          color=\"primary\"\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                )}\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
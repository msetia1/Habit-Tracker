{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/habit-tracker/client/src/pages/HabitManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Box, Button, Fab, TextField, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Snackbar, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, CircularProgress, FormControl, InputLabel, Select, Grid, Chip, Tooltip, Link } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Category as CategoryIcon, CheckCircle as CheckCircleIcon } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { habitAPI, categoryAPI } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport LogHabitDialog from '../components/LogHabitDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst frequencyOptions = [{\n  value: 'daily',\n  label: 'Daily'\n}, {\n  value: 'weekly',\n  label: 'Weekly'\n}, {\n  value: 'monthly',\n  label: 'Monthly'\n}];\nconst initialFormState = {\n  name: '',\n  description: '',\n  frequency: 'daily',\n  targetCount: 1,\n  startDate: new Date(),\n  endDate: null,\n  categoryId: ''\n};\nconst HabitManager = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n  const [editingHabitId, setEditingHabitId] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [alert, setAlert] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [habitToDelete, setHabitToDelete] = useState(null);\n  const navigate = useNavigate();\n\n  // New state for log completion dialog\n  const [logCompletionOpen, setLogCompletionOpen] = useState(false);\n  const [selectedHabit, setSelectedHabit] = useState(null);\n  useEffect(() => {\n    fetchHabits();\n    fetchCategories();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      setLoading(true);\n      const response = await habitAPI.getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n      showAlert('Failed to load habits', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await categoryAPI.getCategories();\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDateChange = (name, date) => {\n    setFormData(prev => ({\n      ...prev,\n      [name]: date\n    }));\n  };\n  const handleSubmit = async () => {\n    try {\n      // Prepare habit data for API\n      const habitData = {\n        ...formData,\n        targetCount: parseInt(formData.targetCount, 10),\n        startDate: formData.startDate.toISOString(),\n        endDate: formData.endDate ? formData.endDate.toISOString() : null,\n        ...(formData.categoryId ? {\n          categoryId: formData.categoryId\n        } : {\n          categoryId: null\n        })\n      };\n      if (editingHabitId) {\n        // Update existing habit\n        await habitAPI.updateHabit(editingHabitId, habitData);\n        showAlert('Habit updated successfully');\n      } else {\n        // Create new habit\n        await habitAPI.createHabit(habitData);\n        showAlert('Habit created successfully');\n      }\n\n      // Reset form and refresh habits\n      setFormData(initialFormState);\n      setEditingHabitId(null);\n      setOpenDialog(false);\n      fetchHabits();\n    } catch (error) {\n      console.error('Error saving habit:', error);\n      showAlert('Failed to save habit', 'error');\n    }\n  };\n  const handleEdit = habit => {\n    // Convert ISO date strings to Date objects\n    const formattedHabit = {\n      ...habit,\n      startDate: new Date(habit.startDate),\n      endDate: habit.endDate ? new Date(habit.endDate) : null\n    };\n    setFormData(formattedHabit);\n    setEditingHabitId(habit.id);\n    setOpenDialog(true);\n  };\n  const confirmDelete = habit => {\n    setHabitToDelete(habit);\n    setDeleteConfirmOpen(true);\n  };\n  const handleDelete = async () => {\n    if (!habitToDelete) return;\n    try {\n      await habitAPI.deleteHabit(habitToDelete.id);\n      showAlert('Habit deleted successfully');\n      fetchHabits();\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n      showAlert('Failed to delete habit', 'error');\n    } finally {\n      setDeleteConfirmOpen(false);\n      setHabitToDelete(null);\n    }\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setFormData(initialFormState);\n    setEditingHabitId(null);\n  };\n  const showAlert = (message, severity = 'success') => {\n    setAlert({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseAlert = () => {\n    setAlert(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n\n  // Navigate to Category Manager\n  const goToCategoryManager = () => {\n    navigate('/categories');\n  };\n\n  // Handle opening the log completion dialog\n  const handleOpenLogCompletion = habit => {\n    setSelectedHabit(habit);\n    setLogCompletionOpen(true);\n  };\n\n  // Handle closing the log completion dialog\n  const handleCloseLogCompletion = () => {\n    setLogCompletionOpen(false);\n    setSelectedHabit(null);\n  };\n\n  // Handle successful completion logging\n  const handleLogCompletionSuccess = () => {\n    showAlert('Habit completion logged successfully!', 'success');\n    fetchHabits(); // Refresh habits to update UI\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Habit Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(CategoryIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 24\n          }, this),\n          onClick: goToCategoryManager,\n          sx: {\n            mr: 2\n          },\n          children: \"Manage Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            setFormData(initialFormState);\n            setEditingHabitId(null);\n            setOpenDialog(true);\n          },\n          children: \"Add Habit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this) : habits.length === 0 ? /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"textSecondary\",\n        children: \"No habits found. Create your first habit to get started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        sx: {\n          mt: 2\n        },\n        onClick: () => {\n          setFormData(initialFormState);\n          setOpenDialog(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: habits.map(habit => {\n            var _frequencyOptions$fin;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: habit.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: habit.description || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: (_frequencyOptions$fin = frequencyOptions.find(opt => opt.value === habit.frequency)) === null || _frequencyOptions$fin === void 0 ? void 0 : _frequencyOptions$fin.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: habit.category ? /*#__PURE__*/_jsxDEV(Chip, {\n                  label: habit.category.name,\n                  size: \"small\",\n                  style: {\n                    backgroundColor: habit.category.color || '#e0e0e0',\n                    color: habit.category.color ? '#fff' : '#000'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this) : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: format(new Date(habit.startDate), 'MMM d, yyyy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Log Completion\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"success\",\n                    onClick: () => handleOpenLogCompletion(habit),\n                    children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  onClick: () => handleEdit(habit),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"error\",\n                  onClick: () => confirmDelete(habit),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)]\n            }, habit.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingHabitId ? 'Edit Habit' : 'Add New Habit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"name\",\n              label: \"Habit Name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"description\",\n              label: \"Description\",\n              value: formData.description || '',\n              onChange: handleInputChange,\n              fullWidth: true,\n              multiline: true,\n              rows: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"frequency\",\n                value: formData.frequency,\n                onChange: handleInputChange,\n                label: \"Frequency\",\n                children: frequencyOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"targetCount\",\n              label: \"Target Count\",\n              type: \"number\",\n              value: formData.targetCount,\n              onChange: handleInputChange,\n              fullWidth: true,\n              inputProps: {\n                min: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Start Date\",\n              value: formData.startDate,\n              onChange: date => handleDateChange('startDate', date),\n              slotProps: {\n                textField: {\n                  fullWidth: true\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"End Date (Optional)\",\n              value: formData.endDate,\n              onChange: date => handleDateChange('endDate', date),\n              slotProps: {\n                textField: {\n                  fullWidth: true\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"categoryId\",\n                value: formData.categoryId || '',\n                onChange: handleInputChange,\n                label: \"Category\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category.id,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        width: 16,\n                        height: 16,\n                        borderRadius: '50%',\n                        bgcolor: category.color || '#9e9e9e',\n                        mr: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 25\n                    }, this), category.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 23\n                  }, this)\n                }, category.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), categories.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1,\n                display: 'block'\n              },\n              children: [\"No categories available. \", /*#__PURE__*/_jsxDEV(Link, {\n                component: \"button\",\n                onClick: goToCategoryManager,\n                children: \"Create some categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 44\n              }, this), \" first.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          children: editingHabitId ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteConfirmOpen,\n      onClose: () => setDeleteConfirmOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Are you sure you want to delete the habit \\\"\", habitToDelete === null || habitToDelete === void 0 ? void 0 : habitToDelete.name, \"\\\"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDeleteConfirmOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDelete,\n          color: \"error\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogHabitDialog, {\n      open: logCompletionOpen,\n      onClose: handleCloseLogCompletion,\n      habit: selectedHabit,\n      onSuccess: handleLogCompletionSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alert.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseAlert,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseAlert,\n        severity: alert.severity,\n        sx: {\n          width: '100%'\n        },\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitManager, \"JS/8bB+WM30Rn50Zrk5URryVqTo=\", false, function () {\n  return [useNavigate];\n});\n_c = HabitManager;\nexport default HabitManager;\nvar _c;\n$RefreshReg$(_c, \"HabitManager\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","Button","Fab","TextField","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Snackbar","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","CircularProgress","FormControl","InputLabel","Select","Grid","Chip","Tooltip","Link","DatePicker","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Category","CategoryIcon","CheckCircle","CheckCircleIcon","format","habitAPI","categoryAPI","useNavigate","LogHabitDialog","jsxDEV","_jsxDEV","frequencyOptions","value","label","initialFormState","name","description","frequency","targetCount","startDate","Date","endDate","categoryId","HabitManager","_s","habits","setHabits","categories","setCategories","formData","setFormData","editingHabitId","setEditingHabitId","openDialog","setOpenDialog","loading","setLoading","alert","setAlert","open","message","severity","deleteConfirmOpen","setDeleteConfirmOpen","habitToDelete","setHabitToDelete","navigate","logCompletionOpen","setLogCompletionOpen","selectedHabit","setSelectedHabit","fetchHabits","fetchCategories","response","getHabits","data","error","console","showAlert","getCategories","handleInputChange","e","target","prev","handleDateChange","date","handleSubmit","habitData","parseInt","toISOString","updateHabit","createHabit","handleEdit","habit","formattedHabit","id","confirmDelete","handleDelete","deleteHabit","handleCloseDialog","handleCloseAlert","goToCategoryManager","handleOpenLogCompletion","handleCloseLogCompletion","handleLogCompletionSuccess","children","display","justifyContent","alignItems","mb","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","sx","mr","mt","length","p","textAlign","color","map","_frequencyOptions$fin","find","opt","category","size","style","backgroundColor","title","onClose","maxWidth","fullWidth","container","spacing","item","xs","onChange","required","multiline","rows","sm","option","type","inputProps","min","slotProps","textField","width","height","borderRadius","bgcolor","onSuccess","autoHideDuration","_c","$RefreshReg$"],"sources":["/Users/mike/Projects/habit-tracker/client/src/pages/HabitManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Typography,\n  Box,\n  Button,\n  Fab,\n  TextField,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Snackbar,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  Grid,\n  Chip,\n  Tooltip,\n  Link\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Category as CategoryIcon,\n  CheckCircle as CheckCircleIcon\n} from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { habitAPI, categoryAPI } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport LogHabitDialog from '../components/LogHabitDialog';\n\nconst frequencyOptions = [\n  { value: 'daily', label: 'Daily' },\n  { value: 'weekly', label: 'Weekly' },\n  { value: 'monthly', label: 'Monthly' },\n];\n\nconst initialFormState = {\n  name: '',\n  description: '',\n  frequency: 'daily',\n  targetCount: 1,\n  startDate: new Date(),\n  endDate: null,\n  categoryId: '',\n};\n\nconst HabitManager = () => {\n  const [habits, setHabits] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n  const [editingHabitId, setEditingHabitId] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [alert, setAlert] = useState({ open: false, message: '', severity: 'success' });\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [habitToDelete, setHabitToDelete] = useState(null);\n  const navigate = useNavigate();\n  \n  // New state for log completion dialog\n  const [logCompletionOpen, setLogCompletionOpen] = useState(false);\n  const [selectedHabit, setSelectedHabit] = useState(null);\n\n  useEffect(() => {\n    fetchHabits();\n    fetchCategories();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      setLoading(true);\n      const response = await habitAPI.getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n      showAlert('Failed to load habits', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await categoryAPI.getCategories();\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleDateChange = (name, date) => {\n    setFormData((prev) => ({ ...prev, [name]: date }));\n  };\n\n  const handleSubmit = async () => {\n    try {\n      // Prepare habit data for API\n      const habitData = {\n        ...formData,\n        targetCount: parseInt(formData.targetCount, 10),\n        startDate: formData.startDate.toISOString(),\n        endDate: formData.endDate ? formData.endDate.toISOString() : null,\n        ...(formData.categoryId ? { categoryId: formData.categoryId } : { categoryId: null })\n      };\n\n      if (editingHabitId) {\n        // Update existing habit\n        await habitAPI.updateHabit(editingHabitId, habitData);\n        showAlert('Habit updated successfully');\n      } else {\n        // Create new habit\n        await habitAPI.createHabit(habitData);\n        showAlert('Habit created successfully');\n      }\n\n      // Reset form and refresh habits\n      setFormData(initialFormState);\n      setEditingHabitId(null);\n      setOpenDialog(false);\n      fetchHabits();\n    } catch (error) {\n      console.error('Error saving habit:', error);\n      showAlert('Failed to save habit', 'error');\n    }\n  };\n\n  const handleEdit = (habit) => {\n    // Convert ISO date strings to Date objects\n    const formattedHabit = {\n      ...habit,\n      startDate: new Date(habit.startDate),\n      endDate: habit.endDate ? new Date(habit.endDate) : null,\n    };\n    \n    setFormData(formattedHabit);\n    setEditingHabitId(habit.id);\n    setOpenDialog(true);\n  };\n\n  const confirmDelete = (habit) => {\n    setHabitToDelete(habit);\n    setDeleteConfirmOpen(true);\n  };\n\n  const handleDelete = async () => {\n    if (!habitToDelete) return;\n    \n    try {\n      await habitAPI.deleteHabit(habitToDelete.id);\n      showAlert('Habit deleted successfully');\n      fetchHabits();\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n      showAlert('Failed to delete habit', 'error');\n    } finally {\n      setDeleteConfirmOpen(false);\n      setHabitToDelete(null);\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setFormData(initialFormState);\n    setEditingHabitId(null);\n  };\n\n  const showAlert = (message, severity = 'success') => {\n    setAlert({ open: true, message, severity });\n  };\n\n  const handleCloseAlert = () => {\n    setAlert((prev) => ({ ...prev, open: false }));\n  };\n\n  // Navigate to Category Manager\n  const goToCategoryManager = () => {\n    navigate('/categories');\n  };\n  \n  // Handle opening the log completion dialog\n  const handleOpenLogCompletion = (habit) => {\n    setSelectedHabit(habit);\n    setLogCompletionOpen(true);\n  };\n  \n  // Handle closing the log completion dialog\n  const handleCloseLogCompletion = () => {\n    setLogCompletionOpen(false);\n    setSelectedHabit(null);\n  };\n  \n  // Handle successful completion logging\n  const handleLogCompletionSuccess = () => {\n    showAlert('Habit completion logged successfully!', 'success');\n    fetchHabits(); // Refresh habits to update UI\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={4}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Habit Manager\n        </Typography>\n        <Box>\n          <Button\n            variant=\"outlined\"\n            startIcon={<CategoryIcon />}\n            onClick={goToCategoryManager}\n            sx={{ mr: 2 }}\n          >\n            Manage Categories\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={() => {\n              setFormData(initialFormState);\n              setEditingHabitId(null);\n              setOpenDialog(true);\n            }}\n          >\n            Add Habit\n          </Button>\n        </Box>\n      </Box>\n\n      {loading ? (\n        <Box display=\"flex\" justifyContent=\"center\" mt={4}>\n          <CircularProgress />\n        </Box>\n      ) : habits.length === 0 ? (\n        <Paper sx={{ p: 4, textAlign: 'center' }}>\n          <Typography variant=\"h6\" color=\"textSecondary\">\n            No habits found. Create your first habit to get started!\n          </Typography>\n          <Fab\n            color=\"primary\"\n            sx={{ mt: 2 }}\n            onClick={() => {\n              setFormData(initialFormState);\n              setOpenDialog(true);\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </Paper>\n      ) : (\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell>Frequency</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Start Date</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {habits.map((habit) => (\n                <TableRow key={habit.id}>\n                  <TableCell>{habit.name}</TableCell>\n                  <TableCell>{habit.description || '-'}</TableCell>\n                  <TableCell>\n                    {frequencyOptions.find((opt) => opt.value === habit.frequency)?.label}\n                  </TableCell>\n                  <TableCell>\n                    {habit.category ? (\n                      <Chip\n                        label={habit.category.name}\n                        size=\"small\"\n                        style={{\n                          backgroundColor: habit.category.color || '#e0e0e0',\n                          color: habit.category.color ? '#fff' : '#000',\n                        }}\n                      />\n                    ) : (\n                      '-'\n                    )}\n                  </TableCell>\n                  <TableCell>{format(new Date(habit.startDate), 'MMM d, yyyy')}</TableCell>\n                  <TableCell>\n                    <Tooltip title=\"Log Completion\">\n                      <IconButton color=\"success\" onClick={() => handleOpenLogCompletion(habit)}>\n                        <CheckCircleIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <IconButton color=\"primary\" onClick={() => handleEdit(habit)}>\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton color=\"error\" onClick={() => confirmDelete(habit)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n\n      {/* Add/Edit Habit Dialog */}\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>{editingHabitId ? 'Edit Habit' : 'Add New Habit'}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"name\"\n                label=\"Habit Name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name=\"description\"\n                label=\"Description\"\n                value={formData.description || ''}\n                onChange={handleInputChange}\n                fullWidth\n                multiline\n                rows={2}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Frequency</InputLabel>\n                <Select\n                  name=\"frequency\"\n                  value={formData.frequency}\n                  onChange={handleInputChange}\n                  label=\"Frequency\"\n                >\n                  {frequencyOptions.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                name=\"targetCount\"\n                label=\"Target Count\"\n                type=\"number\"\n                value={formData.targetCount}\n                onChange={handleInputChange}\n                fullWidth\n                inputProps={{ min: 1 }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <DatePicker\n                label=\"Start Date\"\n                value={formData.startDate}\n                onChange={(date) => handleDateChange('startDate', date)}\n                slotProps={{ textField: { fullWidth: true } }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <DatePicker\n                label=\"End Date (Optional)\"\n                value={formData.endDate}\n                onChange={(date) => handleDateChange('endDate', date)}\n                slotProps={{ textField: { fullWidth: true } }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel>Category</InputLabel>\n                <Select\n                  name=\"categoryId\"\n                  value={formData.categoryId || ''}\n                  onChange={handleInputChange}\n                  label=\"Category\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {categories.map((category) => (\n                    <MenuItem key={category.id} value={category.id}>\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        <Box\n                          sx={{\n                            width: 16,\n                            height: 16,\n                            borderRadius: '50%',\n                            bgcolor: category.color || '#9e9e9e',\n                            mr: 1\n                          }}\n                        />\n                        {category.name}\n                      </Box>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              {categories.length === 0 && (\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\n                  No categories available. <Link component=\"button\" onClick={goToCategoryManager}>Create some categories</Link> first.\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button onClick={handleSubmit} variant=\"contained\">\n            {editingHabitId ? 'Update' : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog open={deleteConfirmOpen} onClose={() => setDeleteConfirmOpen(false)}>\n        <DialogTitle>Confirm Deletion</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Are you sure you want to delete the habit \"{habitToDelete?.name}\"? This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteConfirmOpen(false)}>Cancel</Button>\n          <Button onClick={handleDelete} color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Log Completion Dialog */}\n      <LogHabitDialog\n        open={logCompletionOpen}\n        onClose={handleCloseLogCompletion}\n        habit={selectedHabit}\n        onSuccess={handleLogCompletionSuccess}\n      />\n\n      {/* Alert Snackbar */}\n      <Snackbar open={alert.open} autoHideDuration={6000} onClose={handleCloseAlert}>\n        <Alert onClose={handleCloseAlert} severity={alert.severity} sx={{ width: '100%' }}>\n          {alert.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default HabitManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}